//ilaria-carlini
//
//&<h3>Field changed in app: <ins>Google speech-to-text</ins></h3><ul><li>with_robot: {content:You have <del><b></del><b>**</b>correctly<del></b></del><b>**</b> defined the application for your cluster!\nYou just need to <del><b></del><b>**</b>download the script<del></b></del><b>**</b> on your console and run the following command in a terminal (you can use the copy cmd button for simplicity).\n<del><code></del><b>\n`</b>mkdir -p ~/teamcode/ && mv ~/Downloads/speechToText_setup.txt ~/teamcode/speechToText_setup.sh && cd ~/teamcode/ && chmod +x speechToText_setup.sh && ./speechToText_setup.sh<del></code></del><b>`</b>\n\n<del><b></del><b>**</b>Enjoy<del></b></del><b>**</b> the application!<del></p></del>,cmd:mkdir -p ~/teamcode/ && mv ~/Downloads/speechToText_setup.txt ~/teamcode/speechToText_setup.sh && cd ~/teamcode/ && chmod +x speechToText_setup.sh && ./speechToText_setup.sh,how_to_use:Once you ran the cluster setup, a GUI is generated: <del><ol><li></del><b>\n\n1. </b>Click on the <del><b></del><b>**</b>Choose a file<del></b></del><b>**</b> button to insert the JSON file downloaded <del>in point 6) of </del>the <del><em></del><b>**</b>How to run<del></em></del><b>**</b> section<del></em></li><l</del><b> </b>i<del>></del><b>n step 3).\n\n2. </b>As soon as the GUI says 'Application is being deployed!', you are ready to use it:<del><ul><li></del><b>\n    - </b>In a new terminal open the input port with <del><code class='inline'></del><b>`</b>yarp rpc /googleSpeech/rpc<del></code></li><li></del><b>`\n    - </b>In another terminal open the output port with <del><code class='inline'></del><b>`</b>yarp read ... /googleSpeech/result:o<del></code></li><li></del><b>`\n    - </b>In the input port terminal, write <del><code class='inline'></del><b>`</b>start<del></code></del><b>`</b> to begin your recording and <del><code class='inline'></del><b>`</b>stop<del></code></del><b>`</b> to end it<del></li></ul></li></ol></del>}</li><li>without_robot: {content:You have <del><b></del><b>**</b>correctly<del></b></del><b>**</b> defined the application for your cluster!\nYou just need to <del><b></del><b>**</b>download the script<del></b></del><b>**</b> on your console and run the following command in a terminal (you can use the copy cmd button for simplicity).\n<del><code></del><b>\n`</b>mkdir -p ~/teamcode/ && mv ~/Downloads/speechToText_setup.txt ~/teamcode/speechToText_setup.sh && cd ~/teamcode/ && chmod +x speechToText_setup.sh && ./speechToText_setup.sh<del></code></del><b>`</b>\n\n<del><b></del><b>**</b>Enjoy<del></b></del><b>**</b> the application!<del></p></del>,cmd:mkdir -p ~/teamcode/ && mv ~/Downloads/speechToText_setup.txt ~/teamcode/speechToText_setup.sh && cd ~/teamcode/ && chmod +x speechToText_setup.sh && ./speechToText_setup.sh,how_to_use:Once you ran the cluster setup, a GUI is generated: <del><ol><li></del><b>\n\n1. </b>Click on the <del><b></del><b>**</b>Choose a file<del></b></del><b>**</b> button to insert the JSON file downloaded <del>in point 6) of </del>the <del><em></del><b>**</b>How to run<del></em></del><b>**</b> section<del></em></li><l</del><b> </b>i<del>></del><b>n step 3).\n\n2. </b>As soon as the GUI says 'Application is being deployed!', you are ready to use it:<del><ul><li></del><b>\n    - </b>In a new terminal open the input port with <del><code class='inline'></del><b>`</b>yarp rpc /googleSpeech/rpc<del></code></li><li></del><b>`\n    - </b>In another terminal open the output port with <del><code class='inline'></del><b>`</b>yarp read ... /googleSpeech/result:o<del></code></li><li></del><b>`\n    - </b>In the input port terminal, write <del><code class='inline'></del><b>`</b>start<del></code></del><b>`</b> to begin your recording and <del><code class='inline'></del><b>`</b>stop<del></code></del><b>`</b> to end it<del></li></ul></li></ol></del>}</li></ul>
db.steps.update ({_id: ObjectId("5f85b79a958c6d2c08664c34")},{$set: {with_robot: {"content":"You have **correctly** defined the application for your cluster!\nYou just need to **download the script** on your console and run the following command in a terminal (you can use the copy cmd button for simplicity).\n\n`mkdir -p ~/teamcode/ && mv ~/Downloads/speechToText_setup.txt ~/teamcode/speechToText_setup.sh && cd ~/teamcode/ && chmod +x speechToText_setup.sh && ./speechToText_setup.sh`\n\n**Enjoy** the application!","cmd":"mkdir -p ~/teamcode/ && mv ~/Downloads/speechToText_setup.txt ~/teamcode/speechToText_setup.sh && cd ~/teamcode/ && chmod +x speechToText_setup.sh && ./speechToText_setup.sh","how_to_use":"Once you ran the cluster setup, a GUI is generated: \n\n1. Click on the **Choose a file** button to insert the JSON file downloaded the **How to run** section in step 3).\n\n2. As soon as the GUI says 'Application is being deployed!', you are ready to use it:\n    - In a new terminal open the input port with `yarp rpc /googleSpeech/rpc`\n    - In another terminal open the output port with `yarp read ... /googleSpeech/result:o`\n    - In the input port terminal, write `start` to begin your recording and `stop` to end it"},without_robot: {"content":"You have **correctly** defined the application for your cluster!\nYou just need to **download the script** on your console and run the following command in a terminal (you can use the copy cmd button for simplicity).\n\n`mkdir -p ~/teamcode/ && mv ~/Downloads/speechToText_setup.txt ~/teamcode/speechToText_setup.sh && cd ~/teamcode/ && chmod +x speechToText_setup.sh && ./speechToText_setup.sh`\n\n**Enjoy** the application!","cmd":"mkdir -p ~/teamcode/ && mv ~/Downloads/speechToText_setup.txt ~/teamcode/speechToText_setup.sh && cd ~/teamcode/ && chmod +x speechToText_setup.sh && ./speechToText_setup.sh","how_to_use":"Once you ran the cluster setup, a GUI is generated: \n\n1. Click on the **Choose a file** button to insert the JSON file downloaded the **How to run** section in step 3).\n\n2. As soon as the GUI says 'Application is being deployed!', you are ready to use it:\n    - In a new terminal open the input port with `yarp rpc /googleSpeech/rpc`\n    - In another terminal open the output port with `yarp read ... /googleSpeech/result:o`\n    - In the input port terminal, write `start` to begin your recording and `stop` to end it"}}});
