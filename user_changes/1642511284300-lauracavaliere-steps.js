//lauracavaliere
//
//&<h3>Field changed in app: <ins>Grasp the Ball Application</ins></h3><ul><li>requirements: [Ssh keyless access on machines allows to run smoothly without inserting password at every command,iCub-head on,Motors on,Robot in the parking position (e.g.: robotinterface not running),Coffee/tea,git (version control system)<b>,ROBOTOLOGY_ENABLE_ICUB_BASIC_DEMOS flag enabled when installing superbuild</b>]</li><li>with_robot: {content:You have **correctly** defined the application for your cluster! You just need to **download the script** on your console and run the following command in a terminal (you can use the copy cmd button for simplicity). \n\n`mkdir -p ~/teamcode/ && mv ~/Downloads/graspTheBall_setup.txt ~/teamcode/graspTheBall_setup.sh && cd ~/teamcode/ && chmod +x graspTheBall_setup.sh && ./graspTheBall_setup.sh`\n\n**Enjoy the application!**,cmd:mkdir -p ~/teamcode/ && mv ~/Downloads/graspTheBall_setup.txt ~/teamcode/graspTheBall_setup.sh && cd ~/teamcode/ && chmod +x graspTheBall_setup.sh && ./graspTheBall_setup.sh,how_to_use:When the GUI is up and running, <del>you c</del>a<del>n</del> <del>c</del>li<del>ck</del><b>st</b> o<del>n</del><b>f</b> <del>S</del>t<del>a</del><b>he diffe</b>r<b>en</b>t <del>A</del><b>a</b>pplication <b>op</b>t<b>i</b>o<b>ns</b> <b>wi</b>l<del>aunch</del><b>l</b> <del>th</del><b>becom</b>e <del>d</del><b>availabl</b>e<del>mo.</del><b>:</b>\n<del>Whe</del><b>\</b>n<b>1.</b> <del>t</del><b>A c</b>he<b>ckbox</b> <b>**C</b>a<del>pp</del>li<del>c</del><b>br</b>at<del>i</del><b>e C</b>o<del>n</del><b>lor**:</b> i<del>s</del><b>f</b> <del>r</del><b>tick</b>e<del>a</del>d<del>y</del>, a<b>n</b> <del>v</del><b>automat</b>i<b>c proc</b>e<del>we</del><b>du</b>r<b>e</b> will <del>vi</del>s<del>u</del><b>tart to c</b>ali<del>z</del><b>brat</b>e the <b>color of </b>t<b>he image.\n\n2. A checkbox **Calib</b>ra<b>te Offsets**: if ti</b>cked<b>,</b> <del>b</del>a<del>ll</del><b>n</b> a<del>nd </del><b>utoma</b>t<del>he</del><b>ic</b> <b>p</b>ro<del>bot</del><b>cedure</b> will start <del>g</del><b>to calibrate the re</b>a<del>z</del><b>ch</b>ing a<b>nd </b>t<b>he</b> <b>grasp</b>i<b>ng parame</b>t<b>ers</b> <del>a</del>n<b>eede</b>d <del>t</del><b>fo</b>r<del>y</del> t<del>o</del><b>he</b> re<b>d b</b>a<del>c</del><b>ll demo. T</b>h<b>e</b> <del>a</del><b>u</b>nd<b>erlying</b> <del>g</del><b>d</b>r<del>as</del><b>o</b>p<b>-down</b> <b>l</b>i<b>s</b>t<del>.</del> <del>\n\nA</del><b>is</b> <del>c</del><b>en</b>a<b>b</b>l<del>ibr</del><b>ed </b>a<b>nd i</b>t<b> </b>i<del>on</del><b>s</b> p<del>r</del>o<del>cedur</del><b>ssibl</b>e <del>i</del><b>to </b>s<b>pecify the</b> a<del>ls</del><b>rm t</b>o <del>av</del><b>be c</b>a<b>l</b>i<del>l</del><b>br</b>a<del>b</del><b>ted (`</b>le<b>ft`</b>, <del>wh</del><b>`r</b>i<del>c</del><b>g</b>h<b>t`</b> <del>all</del>o<del>ws</del><b>r</b> <del>y</del><b>`b</b>o<del>u</del><b>th`). If</b> t<b>his opti</b>o<b>n is not ticked, it is</b> a<b>ss</b>u<b>med that </b>t<del>o</del><b>he ar</b>m<b>s </b>a<del>tic</del><b>re </b>al<del>l</del><b>read</b>y calibrate<b>d</b> <del>(1)</del><b>and</b> the <b>`</b>co<del>lor</del><b>nfig.ini`</b> <b>(c</b>o<del>f</del><b>ntained in</b> the <del>im</del><b>p</b>a<del>g</del><b>th r</b>e<del>,</del><b>turned</b> by <b>`yarp re</b>s<b>ourc</b>e<del>le</del><b> --</b>c<del>ti</del><b>o</b>n<del>g </del>t<del>h</del>e<b>xt</b> <del>`C</del><b>demoRedB</b>al<del>ib</del><b>l --f</b>r<del>ate</del><b>om</b> <del>C</del><b>c</b>o<b>nfig.ini`) a</b>l<del>o</del>r<del>`</del><b>eady</b> <del>butt</del><b>c</b>on<del> </del><b>t</b>a<b>i</b>n<del>d (2)</del><b>s</b> the <b>correct </b>reaching and <del>the </del>grasping parameters<b>.</b> <del>f</del><b>\n\nThe applicati</b>o<del>r</del><b>n</b> <del>the</del><b>can</b> <del>r</del><b>b</b>e<del>d</del> <del>b</del><b>l</b>a<del>ll d</del><b>unch</b>e<del>mo,</del><b>d</b> by <b>pre</b>s<del>elect</del><b>s</b>ing the <del>`C</del><b>**St</b>a<b>rt App</b>li<b>cation** </b>b<del>r</del><b>utton. As soon </b>a<b>s </b>t<b>h</b>e <del>Off</del><b>GUI say</b>s<b> 'Th</b>e<b> applica</b>t<b>ion ha</b>s<del>`</del> b<del>u</del><b>een deployed!', </b>t<b>he demo is ready </b>to<b> be used a</b>n<del>.</del><b>d</b> <del>Th</del><b>a vi</b>e<b>wer</b> <b>will vi</b>s<b>ualize th</b>e<b> tra</b>c<del>o</del><b>ked ball.\</b>n<del>d</del><b>\n- If</b> option <b>(1) h</b>a<del>l</del>s<del>o</del> <del>r</del><b>b</b>e<del>quir</del>e<b>n </b>s<b>elected,</b> <b>it i</b>s<b> </b>p<b>ossibl</b>e<del>c</del><b> to set a d</b>if<del>yi</del><b>fere</b>n<del>g</del><b>t color of</b> the <del>a</del><b>viewe</b>r<del>m</del><b> content</b> to <del>b</del><b>ease th</b>e <b>tra</b>c<b>king of the red b</b>al<del>i</del><b>l </b>b<b>y </b>r<del>a</del><b>unning </b>t<b>h</b>e<del>d</del> <del>(</del>`<del>l</del><b>setPerc</b>e<del>f</del><b>n</b>t<b>age</b>`<del>,</del> <del>`r</del><b>funct</b>i<del>g</del><b>on on t</b>h<b>e por</b>t<b> </b>`<b>yarp</b> <del>o</del>r<b>pc</b> <del>`</del><b>/cali</b>b<b>C</b>o<b>lor/rpc` (e.g. `se</b>t<del>h</del><b>Percentage 40.0</b>`).<del> </del>\n\n<b>- </b>I<b>f option (2) has been selected, i</b>n order to calibrate an arm<del>,</del> open a terminal, type `yarp rpc /calibOffsets/rpc` and then type `lookAndCalibrate part`, where `part` is the arm that you want to calibrate (`left` or `right`<b>, depending on what has been selected in the drop-down list of the GUI</b>). This will move the desired arm/hand in a predefined position and the gaze to look towards the end-effector. In order to trigger the calibration, you have to push the ball onto the palm of the hand. Be sure to put the ball into the exact middle of the palm otherwise<b>,</b> the calibration won't start. Only when the offsets will be computed, the service will provide an acknowledgment. <del>\n</del>If you have selected both arms<b> in the drop-down list of the GUI</b>, repeat the same procedure for the other arm. <del>\n</del>\nOnce the calibration procedure has been completed, the <b>`</b>demo<b>RedBall`</b> will start<b> and the robot will try to reach and grasp the ball</b>.<b>\n\n- If option (2) has not been selected, it will be enough to place the red ball in correspondence with the tracker in order to trigger the `demoRedBall`.\n\n**How to check the output of the calibration**: if option (2) has been selected, the calibration procedure will generate the reaching and the grasping parameters and will copy them into the file returned by `yarp resource --context demoRedBall--from config.ini`.\n</b>}</li></ul>
db.steps.update ({_id: ObjectId("5f52487b6de3ecd4c51f19bd")},{$set: {requirements: ["Ssh keyless access on machines allows to run smoothly without inserting password at every command","iCub-head on","Motors on","Robot in the parking position (e.g.: robotinterface not running)","Coffee/tea","git (version control system)","ROBOTOLOGY_ENABLE_ICUB_BASIC_DEMOS flag enabled when installing superbuild"]}});
db.steps.update ({_id: ObjectId("5f52487b6de3ecd4c51f19c0")},{$set: {with_robot: {"content":"You have **correctly** defined the application for your cluster! You just need to **download the script** on your console and run the following command in a terminal (you can use the copy cmd button for simplicity). \n\n`mkdir -p ~/teamcode/ && mv ~/Downloads/graspTheBall_setup.txt ~/teamcode/graspTheBall_setup.sh && cd ~/teamcode/ && chmod +x graspTheBall_setup.sh && ./graspTheBall_setup.sh`\n\n**Enjoy the application!**","cmd":"mkdir -p ~/teamcode/ && mv ~/Downloads/graspTheBall_setup.txt ~/teamcode/graspTheBall_setup.sh && cd ~/teamcode/ && chmod +x graspTheBall_setup.sh && ./graspTheBall_setup.sh","how_to_use":"When the GUI is up and running, a list of the different application options will become available:\n\n1. A checkbox **Calibrate Color**: if ticked, an automatic procedure will start to calibrate the color of the image.\n\n2. A checkbox **Calibrate Offsets**: if ticked, an automatic procedure will start to calibrate the reaching and the grasping parameters needed for the red ball demo. The underlying drop-down list is enabled and it is possible to specify the arm to be calibrated (`left`, `right` or `both`). If this option is not ticked, it is assumed that the arms are already calibrated and the `config.ini` (contained in the path returned by `yarp resource --context demoRedBall --from config.ini`) already contains the correct reaching and grasping parameters. \n\nThe application can be launched by pressing the **Start Application** button. As soon as the GUI says 'The application has been deployed!', the demo is ready to be used and a viewer will visualize the tracked ball.\n\n- If option (1) has been selected, it is possible to set a different color of the viewer content to ease the tracking of the red ball by running the `setPercentage` function on the port `yarp rpc /calibColor/rpc` (e.g. `setPercentage 40.0`).\n\n- If option (2) has been selected, in order to calibrate an arm open a terminal, type `yarp rpc /calibOffsets/rpc` and then type `lookAndCalibrate part`, where `part` is the arm that you want to calibrate (`left` or `right`, depending on what has been selected in the drop-down list of the GUI). This will move the desired arm/hand in a predefined position and the gaze to look towards the end-effector. In order to trigger the calibration, you have to push the ball onto the palm of the hand. Be sure to put the ball into the exact middle of the palm otherwise, the calibration won't start. Only when the offsets will be computed, the service will provide an acknowledgment. If you have selected both arms in the drop-down list of the GUI, repeat the same procedure for the other arm. \nOnce the calibration procedure has been completed, the `demoRedBall` will start and the robot will try to reach and grasp the ball.\n\n- If option (2) has not been selected, it will be enough to place the red ball in correspondence with the tracker in order to trigger the `demoRedBall`.\n\n**How to check the output of the calibration**: if option (2) has been selected, the calibration procedure will generate the reaching and the grasping parameters and will copy them into the file returned by `yarp resource --context demoRedBall--from config.ini`.\n"}}});
