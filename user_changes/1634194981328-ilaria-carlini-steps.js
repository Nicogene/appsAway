//ilaria-carlini
//
//&<h3>Field changed in app: <ins>Supervised Calibration Application</ins></h3><ul><li>with_robot: {content:You have <b>correctly</b> defined the application for your cluster!\nYou just need to <b>download the script</b> on your console and run the following command in a terminal (you can use the copy cmd button for simplicity).\n<code>mkdir -p ~/teamcode/ && mv ~/Downloads/superviseCalib_setup.txt ~/teamcode/superviseCalib_setup.sh && cd ~/teamcode/ && chmod +x superviseCalib_setup.sh && ./superviseCalib_setup.sh</code>\n\n<b>Enjoy</b> the application!</p>,cmd:mkdir -p ~/teamcode/ && mv ~/Downloads/superviseCalib_setup.txt ~/teamcode/superviseCalib_setup.sh && cd ~/teamcode/ && chmod +x superviseCalib_setup.sh && ./superviseCalib_setup.sh,how_to_use:When the GUI is up and running, <del>you</del><b>a</b> <del>w</del><b>l</b>i<del>ll</del><b>st of</b> <del>se</del><b>th</b>e different application options<b> will became available</b>:\n\n1. <b>A drop-down list for the </b>**<del>cus</del>t<b>ype </b>o<b>f ca</b>m<b>era**: it</b> <del>f</del><b>is poss</b>i<b>b</b>le <b>to </b>ch<b>oos</b>e<del>ck</del><b> </b>b<b>etween RGB </b>o<del>x**:\</del><b>r Event Cameras. Be careful a</b>n<b>d</b> <b>choose</b> <b>Event</b> <b>Cameras</b> <del>-</del><b>only</b> if t<b>he robot you want to test the demo on has them. Depend</b>i<b>ng on the </b>c<del>k</del><b>hos</b>e<del>d</del><b>n type of camera</b>, the c<b>ontent of the **Resol</b>u<b>tion** drop-down li</b>st<b> changes.\n\n2. A dr</b>o<del>m</del><b>p-down list</b> f<del>i</del><b>or the **r</b>e<b>so</b>l<del>d</del><b>ution**: it</b> is <b>possibl</b>e<b> to choose the resolutio</b>n<b> of the c</b>a<b>meras that will </b>b<b>e ca</b>l<b>ibrat</b>ed<b>.</b> <del>a</del><b>Depe</b>nd<b>ing on</b> the<del>r</del><b> chos</b>e<b>n</b> <del>y</del><b>res</b>o<b>l</b>u<b>tion, the</b> c<b>ontent of the **C</b>a<b>mera Configuratio</b>n <del>s</del><b>File** dro</b>p<b>-down list chang</b>e<b>s.\n\n3. A </b>c<del>i</del><b>heckbox </b>f<del>y</del><b>or **Run</b> the <del>p</del><b>cameras manu</b>a<b>lly**: i</b>t<del>h</del><b> is</b> <b>p</b>o<del>f</del><b>ssible</b> <del>y</del><b>t</b>o<b> r</b>u<b>n manually the came</b>r<b>a</b> <b>devi</b>c<del>u</del><b>e</b>s<b>. This op</b>t<b>i</b>o<b>n i</b>m<b>plies</b> <b>not sele</b>c<b>t a Camera C</b>onfiguration <del>f</del><b>F</b>ile<b>.\n\n4. A</b> <b>d</b>r<del>e</del><b>op-down </b>l<b>ist for the **Camera Configur</b>at<b>ion Fil</b>e<del>d</del><b>**:</b> <b>i</b>t<b> is p</b>o<b>ssible to select one of</b> the <b>p</b>ro<del>b</del><b>posed configurati</b>o<b>n files (`.ini` ex</b>t<b>ension).\n\n5.</b> <del>y</del><b>A checkb</b>o<del>u</del><b>x</b> <del>a</del><b>fo</b>r<del>e</del> using <b>a **Cus</b>to<b>m</b> <del>r</del><b>iC</b>u<b>bEyes.i</b>n<b>i File**: if ticked,</b> the <del>ap</del><b>underlying text in</b>p<del>;\</del><b>ut is e</b>n<b>abled</b> <b>and</b> <b>there</b> <b>it</b> <del>-</del><b>is</b> <b>possible to spec</b>if<b>y</b> <del>no</del>t<b>he</b> <b>pa</b>t<del>i</del><b>h of a </b>c<del>k</del><b>ustom `iCubEy</b>e<del>d</del><b>s.ini`</b>,<b> otherwise</b> the default file `icubEyes.ini`  is used; \n<b>\n6.</b> <b>A</b> <b>checkbox</b> <b>for the **Mono Calibration**: if not ticked, stereo calibration is triggered by default.\n</b>\n   **Obs**: The application relies on a configuration file (i.e. <b>`</b>icubEyes.ini<b>`</b> or <b>a </b>custom <del>fil</del><b>on</b>e) including an initial guess of the intrinsic and extrinsic camera parameters. The calibration procedure provides as result a refinement of such parameters, which are overwritten in the file. This is done to allow the modules responsible <b>f</b>o<del>f</del><b>r</b> undistorting the camera images to automatically load the correct file and avoid a manual copy of the calibration result. This implies that <del>if you </del>run<b>ning</b> the deployment multiple times, <del>you will lose </del>the result of the previous calibration<b> will be lost</b>. For this reason, we recommend<del> you</del> sav<del>e th</del>i<del>s file</del><b>ng</b> or renam<del>e</del><b>ing</b> <b>th</b>i<del>t</del><b>s file</b> before running another procedure.\n \n    **<del>T</del><b>How t</b>o check the output of the calibration**:<del>\n    -</del> if<del> you ticked</del> the <del>**custo</del><b>Ca</b>m<del> fil</del>e<del> checkbox**, you will find the output in you</del>r<b>a</b> <del>custom c</del><b>C</b>onfiguration <del>f</del><b>F</b>ile<del>\n    -</del> <del>if yo</del>u<del> di</del><b>se</b>d<del>n't,</del> <del>you w</del>i<del>ll</del><b>s</b> <del>find</del><b>a</b> <del>i</del><b>cus</b>t<b>om</b> <del>i</del><b>o</b>n<del> th</del>e<b>,</b> <del>pa</del>th<b>e</b> <del>re</del><b>ou</b>t<b>p</b>u<del>rned</del><b>t</b> <del>by `yarp res</del>o<del>urce</del><b>f</b> <del>--con</del>t<b>h</b>e<del>xt</del> c<del>ameraC</del>alibration <del>--from </del><b>w</b>i<del>cu</del><b>ll </b>b<del>Ey</del>e<del>s.ini`\n</del> <del>   I</del><b>i</b>n the s<del>ame </del>p<del>ath, you w</del><b>ec</b>i<del>ll also </del>fi<del>nd th</del>e<b>d</b> <b>f</b>i<del>mag</del><b>l</b>e<del>s</del><b>;</b> <del>used f</del>o<del>r </del>the<del> calib</del>r<del>ation procedure.\n\n2. **drop-do</del>w<del>n l</del>is<del>t for th</del>e<b>,</b> t<del>ype of camera**: </del>he<del>re</del> <del>y</del>ou<del> can choose </del>t<del>o </del><b>p</b>u<del>se RGB</del><b>t</b> o<del>r event cameras. Be aware</del><b>f</b> th<del>at you should sel</del>e<del>ct event</del> ca<del>meras on</del>l<del>y </del>i<del>f you</del><b>b</b>r<del> robot h</del>a<del>s </del>t<del>hem. Depend</del>i<del>ng </del>on <del>the</del><b>will</b> <del>chos</del><b>b</b>e<del>n</del> <del>opt</del>i<del>o</del>n<del>,</del> the <del>content of </del><b>pa</b>th<del>e</del> re<del>solu</del>t<del>io</del><b>ur</b>n<del> </del><b>e</b>d<del>rop-down</del> <del>list</del><b>by</b> <del>ch</del><b>`y</b>a<del>nges.\n3. **d</del>r<del>o</del>p<del>-down list for the</del> reso<del>l</del>u<del>tion**: he</del>r<b>c</b>e <del>you </del><b>--</b>c<del>an ch</del>o<del>ose </del><b>n</b>t<del>h</del>e<del> resolu</del><b>x</b>t<del>ion of your</del> camera<del>s that will be c</del><b>C</b>alibrat<del>ed. Depend</del>i<del>ng </del>on <del>the chosen </del><b>--f</b>r<del>esoluti</del>o<del>n, the content of the ca</del>m<del>era</del> <del>conf f</del>i<del>le drop-down list </del>c<del>hang</del><b>ubEy</b>es.<b>ini`</b>\n<del>4. **drop-dow</del><b>\</b>n<del> list </del><b>A</b>f<del>or </del>t<del>he cam</del>er<del>a</del> <del>conf file**: </del><b>t</b>he<del>re you can</del> select<del> </del><b>i</b>on<del>e</del> of <del>the proposed `.ini` files or </del>a<del> _Custom-fi</del>l<del>e_. In this </del>l<del>ast case, a text field is enabled and here</del> the <del>user must insert his cust</del>o<del>m file in order to start the a</del>p<del>plica</del>tion<del>. It'</del>s <del>importa</del>n<del>t to know that th</del>e<del> fil</del>e<del> has to exist insi</del>de<del> `robotology/robot-configuration/name_of_your_robot` an</del>d <del>it has </del>to <del>co</del>r<del>respo</del><b>u</b>n<del>d to</del> the <del>se</del><b>app</b>l<del>e</del><b>i</b>c<del>ted resolu</del><b>a</b>tion<del>. If one of these requirements is not satisfied</del>, the application <del>won't start.\n5. **mono </del>ca<del>libratio</del>n <del>check</del>b<del>ox**: if not tick</del>e<del>d,</del> <del>stereo ca</del>l<del>ibration is triggered by def</del>au<del>lt.\</del>n<del>\nAfter you sele</del>c<del>t</del><b>h</b>ed <del>the o</del>p<del>tions you wi</del><b>re</b>s<del>h to u</del>s<del>e to run the appl</del>i<del>catio</del>n<del>, press</del><b>g</b> the <del>'</del><b>**</b>Start Application<del>'</del><b>**</b> button. As soon as the GUI says 'The application has been deployed!', <del>you</del><b>the</b> <del>ar</del><b>d</b>e<b>mo is</b> ready to <b>be </b>use<del> it</del><b>d</b>. Remember t<del>o </del>ha<del>ve</del><b>t</b> <del>w</del>i<b>n order to perform </b>th<b>e</b> <del>y</del><b>calibrati</b>o<del>u</del><b>n,</b> a <b>**</b>printed chessboard with pattern 8x6<del>,</del><b>**</b> <del>wh</del>i<del>ch</del><b>s needed and</b> can be found at [this link](https://github.com/robotology/camera-calibration-supervisor/blob/main/gazebo/models/chessboard/materials/textures/Checkerboard-A4-30mm-8x6-1.jpg). A viewer wi<del>ll appear wi</del>th a red bounding box<del>: you</del> will <del>h</del>a<del>v</del><b>pp</b>e<del> to fit</del><b>ar:</b> the chessboard <b>need to fit </b>into the bounding box <del>u</del><b>i</b>n<b> order </b>t<del>i</del><b>o </b>l<b>et</b> it becomes green<del>.</del><b> and to</b> <del>N</del><b>pr</b>o<del>t</del><b>ce</b>e<b>d in</b> th<b>e calibr</b>at<del> </del>i<del>f y</del>o<del>u</del><b>n.</b> <del>selec</del><b>No</b>te<del>d</del> th<del>e</del><b>at</b> <del>e</del><b>with E</b>vent-driven <del>c</del><b>C</b>ameras <del>you will need to use </del>a flashing image<b> is required</b>, such as a chessboard flashing on a tablet. As soon as the calibration will be performed<del> you will see</del><b>,</b> two viewers<b> will</b> appear<del>ing and</del> showing<b>, as result,</b> the undistorted cameras.}</li></ul>
db.steps.update ({_id: ObjectId("600965c350feaf2f6cb2860b")},{$set: {with_robot: {"content":"You have <b>correctly</b> defined the application for your cluster!\nYou just need to <b>download the script</b> on your console and run the following command in a terminal (you can use the copy cmd button for simplicity).\n<code>mkdir -p ~/teamcode/ && mv ~/Downloads/superviseCalib_setup.txt ~/teamcode/superviseCalib_setup.sh && cd ~/teamcode/ && chmod +x superviseCalib_setup.sh && ./superviseCalib_setup.sh</code>\n\n<b>Enjoy</b> the application!</p>","cmd":"mkdir -p ~/teamcode/ && mv ~/Downloads/superviseCalib_setup.txt ~/teamcode/superviseCalib_setup.sh && cd ~/teamcode/ && chmod +x superviseCalib_setup.sh && ./superviseCalib_setup.sh","how_to_use":"When the GUI is up and running, a list of the different application options will became available:\n\n1. A drop-down list for the **type of camera**: it is possible to choose between RGB or Event Cameras. Be careful and choose Event Cameras only if the robot you want to test the demo on has them. Depending on the chosen type of camera, the content of the **Resolution** drop-down list changes.\n\n2. A drop-down list for the **resolution**: it is possible to choose the resolution of the cameras that will be calibrated. Depending on the chosen resolution, the content of the **Camera Configuration File** drop-down list changes.\n\n3. A checkbox for **Run the cameras manually**: it is possible to run manually the camera devices. This option implies not select a Camera Configuration File.\n\n4. A drop-down list for the **Camera Configuration File**: it is possible to select one of the proposed configuration files (`.ini` extension).\n\n5. A checkbox for using a **Custom iCubEyes.ini File**: if ticked, the underlying text input is enabled and there it is possible to specify the path of a custom `iCubEyes.ini`, otherwise the default file `icubEyes.ini`  is used; \n\n6. A checkbox for the **Mono Calibration**: if not ticked, stereo calibration is triggered by default.\n\n   **Obs**: The application relies on a configuration file (i.e. `icubEyes.ini` or a custom one) including an initial guess of the intrinsic and extrinsic camera parameters. The calibration procedure provides as result a refinement of such parameters, which are overwritten in the file. This is done to allow the modules responsible for undistorting the camera images to automatically load the correct file and avoid a manual copy of the calibration result. This implies that running the deployment multiple times, the result of the previous calibration will be lost. For this reason, we recommend saving or renaming this file before running another procedure.\n \n    **How to check the output of the calibration**: if the Camera Configuration File used is a custom one, the output of the calibration will be in the specified file; otherwise, the output of the calibration will be in the path returned by `yarp resource --context cameraCalibration --from icubEyes.ini`\n\nAfter the selection of all the options needed to run the application, the application can be launched pressing the **Start Application** button. As soon as the GUI says 'The application has been deployed!', the demo is ready to be used. Remember that in order to perform the calibration, a **printed chessboard with pattern 8x6** is needed and can be found at [this link](https://github.com/robotology/camera-calibration-supervisor/blob/main/gazebo/models/chessboard/materials/textures/Checkerboard-A4-30mm-8x6-1.jpg). A viewer with a red bounding box will appear: the chessboard need to fit into the bounding box in order to let it becomes green and to proceed in the calibration. Note that with Event-driven Cameras a flashing image is required, such as a chessboard flashing on a tablet. As soon as the calibration will be performed, two viewers will appear showing, as result, the undistorted cameras."}}});
