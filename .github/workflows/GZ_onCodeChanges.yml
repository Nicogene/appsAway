# this workflow will generate the containers of gazebo on push. 

name: GZ_onCodeChanges

on: 
    repository_dispatch:
        types: [GZ_onCodeChanges]

jobs:
    job_1:
        runs-on: self-hosted
        steps:
            - uses: actions/checkout@v2
              with:
                  repository: icub-tech-iit/code
                  token: ${{ secrets.CODE_REPO_ACCSS_TOKEN }}
            - name: Login to DockerHub Registry
              run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

########### This command sets the master/release variable ##############################
            - name: set release/devel argument for Docker build
              run: |
                echo ${{ github.event.client_payload.version }} > RELEASE_TAG
                echo "release=$(cat RELEASE_TAG)" > RELEASE_ARG
                echo $(cat RELEASE_ARG)
#########################################################################################

######## Full unstable Docker image #########
            - name: Build gazebo Docker unstable full image
              run: docker build ${{ github.event.client_payload.extra_payload.docker_path }} --build-arg $(cat RELEASE_ARG) --file ${{ github.event.client_payload.extra_payload.docker_path }}/Dockerfile --tag ${{ github.event.client_payload.extra_payload.gazebo_unst_src}}
            - name: Test gazebo Docker unstable full image
              run: | 
                    cd .ci && docker-compose -f docker-yarpgazebo.yml down
                    docker-compose -f docker-yarpgazebo.yml up -d && sleep 30
                    docker exec $(docker ps -qf "name=ci_yarp-server_1") sh -c "if pgrep yarpserver >/dev/null 2>&1; then pkill yarpserver; else touch /outcome/ci_yarp-server_1.fail; fi"
                    docker exec $(docker ps -qf "name=ci_yarp-gazebo_1") sh -c "if pgrep gazebo >/dev/null 2>&1; then pkill gazebo; else touch /outcome/ci_yarp-gazebo_1.fail; fi"
                    find . -name "*.fail" -print0 | while read -d $'\0' file 
                    do 
                      tmp=$(echo "$file" | cut -c 3-) 
                      containerName=$(echo "$tmp" | cut -f 1 -d '.') 
                      containerID=$(docker ps -aqf "name=$containerName") 
                      echo "Fetching logs from container name: $containerName with ID:$containerID" 
                      docker logs $containerID 
                    done
                    if [ -n "$(find . -name '*.fail')" ]; then exit 1; fi
                      docker-compose -f docker-yarpgazebo.yml down
            - name: Push gazebo Docker full image
              run: docker push ${{ github.event.client_payload.extra_payload.gazebo_unst_src }}
#########################################################################################

######## Thin unstable Docker image #########
            - name: Build gazebo Docker unstable thin image
              run: docker build --build-arg ${{ github.event.client_payload.extra_payload.unst_base_image_for_GZ_src }} --build-arg ${{ github.event.client_payload.extra_payload.base_image_for_GZ_src }} ${{ github.event.client_payload.extra_payload.docker_path }} --file ${{ github.event.client_payload.extra_payload.docker_path }}/Dockerfile4production --tag ${{ github.event.client_payload.extra_payload.gazebo_unst_bin }}
            - name: Push gazebo Docker thin image
              run: docker push ${{ github.event.client_payload.extra_payload.gazebo_unst_bin}}
#########################################################################################

    job_2:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
              with:
                  repository: icub-tech-iit/code
                  token: ${{ secrets.CODE_REPO_ACCSS_TOKEN }}
            - name: Login to DockerHub Registry
              run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

########### This command sets the master/release variable ##############################
            - name: set release/devel argument for Docker build
              run: |
                echo ${{ github.event.client_payload.version }} > RELEASE_TAG
                echo "release=$(cat RELEASE_TAG)" > RELEASE_ARG
                echo $(cat RELEASE_ARG)

######## Full stable Docker image #########
            - name: Build gazebo Docker stable full image
              run: docker build ${{ github.event.client_payload.extra_payload.docker_path }} --build-arg $(cat RELEASE_ARG) --file ${{ github.event.client_payload.extra_payload.docker_path }}/Dockerfile --tag ${{ github.event.client_payload.extra_payload.gazebo_stab_src}}
            - name: Push gazebo Docker full image
              run: docker push ${{ github.event.client_payload.extra_payload.gazebo_stab_src }}
#########################################################################################

######## Thin stable Docker image #########
            - name: Build gazebo Docker stable thin image
              run: docker build --build-arg ${{ github.event.client_payload.extra_payload.stab_base_image_for_GZ_src }} --build-arg ${{ github.event.client_payload.extra_payload.base_image_for_GZ_src }} ${{ github.event.client_payload.extra_payload.docker_path }} --file ${{ github.event.client_payload.extra_payload.docker_path }}/Dockerfile4production --tag ${{ github.event.client_payload.extra_payload.gazebo_stab_bin }}
            - name: Push gazebo Docker thin image
              run: docker push ${{ github.event.client_payload.extra_payload.gazebo_stab_bin}}
#########################################################################################

######## Trigger grasp the ball after gazebo images have been built #########

    job_3: 
      needs: [job_1, job_2]
      runs-on: [ubuntu-latest]
      steps:
      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.CODE_REPO_ACCSS_TOKEN }}
          repository: icub-tech-iit/appsAway
          event-type: GTB_onCodeChanges
          client-payload: '{"version": "devel", "type": "GTB_onCodeChanges", 
            "extra_payload": {
              "grasptheball_unst_src": "icubteamcode/grasptheballgazebo:devel_master-unstable_sources",  
              "grasptheball_unst_bin": "icubteamcode/grasptheballgazebo:devel_master-unstable_binaries", 
              "grasptheball_stab_src": "icubteamcode/grasptheballgazebo:devel_master-stable_sources", 
              "grasptheball_stab_bin": "icubteamcode/grasptheballgazebo:devel_master-stable_binaries", 
              "unst_base_image_for_GTB_src": "FULL_NAME=icubteamcode/gazebo:devel_master-unstable_sources", 
              "stab_base_image_for_GTB_src": "FULL_NAME=icubteamcode/gazebo:devel_master-stable_sources", 
              "unst_sb_base_image_for_GTB_bin": "THIN_NAME=icubteamcode/gazebo:devel_master-unstable_binaries", 
              "stab_sb_base_image_for_GTB_bin": "THIN_NAME=icubteamcode/gazebo:devel_master-stable_binaries", 
              "unst_base_image_for_GTB_bin": "START_IMAGE_FULL=icubteamcode/grasptheballgazebo:devel_master-unstable_sources", 
              "stab_base_image_for_GTB_bin": "START_IMAGE_FULL=icubteamcode/grasptheballgazebo:devel_master-stable_sources",
              "docker_path": "./dockerfile_images/demos/graspTheBall"}}'
