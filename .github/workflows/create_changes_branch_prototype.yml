name: Creating changes branch

on: 
  push:
    #repository_dispatch:
    #    types: [user_changes]


#            mv -v ./appsAway/user_changes/* ./icub-tech-apps/dist/database/upgrade/
#            mv -v ./appsAway/user_changes/images/* ./icub-tech-apps/dist/express/images/

jobs:
  update_code:
    runs-on: ubuntu-latest
    steps: 
      # checkout code
      - uses: actions/checkout@v2
        with:
          repository: icub-tech-iit/code
          token: ${{ secrets.CODE_REPO_ACCSS_TOKEN }}
          path: code
          ref: "user_changes_19072021104501"
            
      # we checkout appsAway
      - name: check ls and pwd
        run: |
          ls
          pwd
      - uses: actions/checkout@v2
        with:
          path: appsAway

      - name: copies user_changes to temporary folder
        run: |
            cd code
            mkdir -p ../test/
            mv -v ./icub-tech-apps/dist/express/evaluate/*.* ../test/ 2>/dev/null || :

      - name: Create branch
        run: |
            cd appsAway
            pwd
            git branch "user_changes_19072021104501_test1"
            git checkout "user_changes_19072021104501_test1"

      - name: copies user_changes folder
        run: |
            pwd
            mkdir -p ./appsAway/user_changes/
            mv -v ./test/* ./appsAway/user_changes/


      - name: Commit changes
        run: |
            cd appsAway
            pwd
            git status
            git config --local user.email "actions@github.com"
            git config --local user.name "GitHub Action"
            git add -A
            git commit -m "Merged user changes in appsAway" -a
        

      - name: push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: "user_changes_19072021104501_test1"
          directory: "./appsAway/"

      - name: check ls and pwd
        run: |
          ls
          pwd
          rm -rf appsAway
          rm -rf code
          ls
          pwd

      - uses: actions/checkout@v2
        with:
          ref: "user_changes_19072021104501_test1"

      - name: get file data
        id: get_filedata
        run: |
              pwd
              ls
              cd user_changes
              file_list=$(ls -p | grep -v / )
              len_list=${#file_list[@]}
              iter=0
              for file in $file_list
              do
                if [ $iter != 0 ];
                then
                  user_list="$user_list,"
                  exported_img_list="$exported_img_list "
                  changes_list="$changes_list<br/>"
                fi
                user_list="$user_list$(head -1 $file | awk -F'//' '{print $2}')"
                exported_img_list="$exported_img_list$(head -2 $file | tail -1 | awk -F'//' '{print $2}')"
                changes_list="$changes_list$(tail -n +1 $file | awk -F'//&' '{print $2}')"
              iter=$((iter+1))
              done
              echo $user_list
              exported_img_list=($exported_img_list)
              echo ${exported_img_list[@]}
              echo $changes_list
              echo ::set-output name=user_list::$user_list
              echo ::set-output name=changes_list::$changes_list
              echo ::set-output name=exported_img_list::${exported_img_list[@]}
              

      - name: check ls and pwd
        run: |
          ls
          pwd

      - name: pull-request
        id: open-pr
        uses: repo-sync/pull-request@v2
        with:
            pr_title: "Adding user changes into the website."
            pr_body: ${{ steps.get_filedata.outputs.changes_list }}
            pr_reviewer: "AlexAntn,vtikha,ilaria-carlini"
            pr_assignee: ${{ steps.get_filedata.outputs.user_list }}
            source_branch: "user_changes_19072021104501_test1"
            github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true


      - name: add metadata to bucket
        run: |
          for img in ${{ steps.get_filedata.outputs.exported_img_list }}
          do
            gsutil setmeta -h "x-goog-meta-pr-number: ${{steps.open-pr.outputs.pr_number}}" gs://$img
          done
